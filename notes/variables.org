* Variables

** Allocating Storage Space for Initialized Data

  | Directive | Purpose           | Storage Space      |
  |-----------+-------------------+--------------------|
  | DB        | Define Byte       | allocates 1 byte   |
  | DW        | Define Word       | allocates 2 bytes  |
  | DD        | Define DoubleWord | allocates 4 bytes  |
  | DQ        | Define QuadWord   | allocates 8 bytes  |
  | DT        | Define Ten Bytes  | allocates 10 bytes |

  *Notes*
  - Each byte of character is stored as its ASCII value in hexadecimal.
  - Each decimal value is automatically converted to its 16-bit binary equivalent
    and stored as a hexadecimal number.
  - Processor uses the little-endian byte ordering.
  - Negative numbers are converted to its 2's complement representation.
  - Short and long floating-point numbers are represented using 32 or 64 bits,
    respectively.

  #+NAME: variables 1
   #+BEGIN_SRC asm
    choice       db 'y'             ; ASCII of 79 = 79H
    number       dw 12345           ; 12345D = 3039H
    neg_number   dw -12345
    big_number   dq 123456789       ; 123456789D = 75BCD15H
    real_number1 dd 1.234
    real_number2 dq 123.456
   #+END_SRC


** Allocating Storage Space for Uninitialized Data
   The reserve directives are used for reserving space for uninitialized data.
   The reserve directives take a single operand that specifies the number of units of
   space to be reserved. Each define directive has a related reserve directive.

   | Directive | Purpose              |
   |-----------+----------------------|
   | RESB      | Reserve a Byte       |
   | RESW      | Reserve a Word       |
   | RESD      | Reserve a DoubleWord |
   | RESQ      | Reseve a QuadWord    |
   | REST      | Reserve Ten Bytes    |
